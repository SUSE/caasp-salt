---
apiVersion: v1
kind: Pod
metadata:
  name: haproxy
  namespace: kube-system
  labels:
    name: haproxy
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: docker/default
spec:
  restartPolicy: Always
  hostNetwork: true
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
  # prevent evictions
  priorityClassName: system-node-critical
  containers:
    - name: haproxy
      image: {{ salt.caasp_registry.base_image_url() }}/haproxy:1.6.11
      resources:
        requests:
          memory: 128Mi
        limits:
          memory: 128Mi
      volumeMounts:
        - name: haproxy-cfg
          mountPath: /etc/haproxy
        - name: ca-certificate
          mountPath: /etc/pki/ca.crt
          readOnly: True
        - name: kubernetes-proxy-bundle-certificate
          mountPath: {{ pillar['ssl']['kube_apiserver_proxy_bundle'] }}
          readOnly: True
{% if "admin" in salt['grains.get']('roles', []) %}
        - name: etc-hosts
          mountPath: /etc/hosts
        - name: velum-bundle-certificate
          mountPath: {{ pillar['ssl']['velum_bundle'] }}
          readOnly: True
        - name: velum-unix-socket
          mountPath: /var/run/puma
{% endif %}
  volumes:
    - name: haproxy-cfg
      hostPath:
        path: /etc/caasp/haproxy
    - name: ca-certificate
      hostPath:
{% if "admin" in salt['grains.get']('roles', []) %}
        path: /etc/pki/ca.crt
{% else %}
        path: {{ pillar['ssl']['ca_file'] }}
{% endif %}
        type: FileOrCreate
    - name: kubernetes-proxy-bundle-certificate
      hostPath:
        path: {{ pillar['ssl']['kube_apiserver_proxy_bundle'] }}
        type: FileOrCreate
{% if "admin" in salt['grains.get']('roles', []) %}
    - name: etc-hosts
      hostPath:
        path: /etc/hosts
    - name: velum-bundle-certificate
      hostPath:
        path: {{ pillar['ssl']['velum_bundle'] }}
    - name: velum-unix-socket
      hostPath:
        path: /var/run/puma
{% endif %}
