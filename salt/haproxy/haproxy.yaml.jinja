---
apiVersion: v1
kind: Pod
metadata:
  name: haproxy
  namespace: kube-system
  labels:
    name: haproxy
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  restartPolicy: Always
  hostNetwork: true
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
    - key: "CriticalAddonsOnly"
      operator: "Exists"
  containers:
    - name: haproxy
      image: sles12/haproxy:1.6.0
      resources:
        requests:
          memory: 128Mi
        limits:
          memory: 128Mi
      volumeMounts:
        - name: haproxy-cfg
          mountPath: /etc/haproxy
{% if "admin" in salt['grains.get']('roles', []) %}
        - name: etc-hosts
          mountPath: /etc/hosts
        - name: velum-bundle-certificate
          mountPath: /etc/pki/velum.pem
          readOnly: True
        - name: ca-certificate
          mountPath: /etc/pki/ca.crt
          readOnly: True
        - name: velum-unix-socket
          mountPath: /var/run/puma
{% endif %}
  volumes:
    - name: haproxy-cfg
      hostPath:
        path: /etc/caasp/haproxy
{% if "admin" in salt['grains.get']('roles', []) %}
    - name: etc-hosts
      hostPath:
        path: /etc/hosts
    - name: velum-bundle-certificate
      hostPath:
        path: /etc/pki/private/velum-bundle.pem
    - name: ca-certificate
      hostPath:
        path: /etc/pki/ca.crt
    - name: velum-unix-socket
      hostPath:
        path: /var/run/puma
{% endif %}
