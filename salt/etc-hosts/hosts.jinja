### service names ###
# set the apiserver for 127.0.0.1 on all hosts as haproxy is listening on all nodes
# and forwarding connections to the real master
{% if "kube-master" in salt['grains.get']('roles', []) %}
127.0.0.1 api api.{{ pillar['internal_infra_domain'] }} {{ pillar['api']['server']['external_fqdn'] }}
{% else %}
127.0.0.1 api api.{{ pillar['internal_infra_domain'] }}
{% endif %}

### admin nodes ###
{%- set admins = salt['mine.get']('roles:admin', 'network.ip_addrs', 'grain') %}
{%- for admin_id, addrlist in admins.items() %}
	{%- if addrlist is string %}
		{%- set ip = addrlist %}
	{%- else %}
		{%- set ip = addrlist|first %}
	{%- endif %}
{{ ip }} {{ admin_id }} {{ admin_id }}.{{ pillar['internal_infra_domain'] }}
{%- endfor %}

### kubernetes masters ###
{%- set masters = salt['mine.get']('roles:kube-master', 'network.ip_addrs', 'grain') %}
{%- for master_id, addrlist in masters.items() %}
	{%- if addrlist is string %}
		{%- set ip = addrlist %}
	{%- else %}
		{%- set ip = addrlist|first %}
	{%- endif %}
{{ ip }} {{ master_id }} {{ master_id }}.{{ pillar['internal_infra_domain'] }}
{%- endfor %}

### kubernetes workers ###
{%- set minions = salt['mine.get']('roles:kube-minion', 'network.ip_addrs', 'grain') %}
{%- for minion_id, addrlist in minions.items() %}
	{%- if addrlist is string %}
		{%- set ip = addrlist %}
	{%- else %}
		{%- set ip = addrlist|first %}
	{%- endif %}
{{ ip }} {{ minion_id }} {{ minion_id }}.{{ pillar['internal_infra_domain'] }}
{%- endfor %}
