{% set api_server = "api." + pillar['internal_infra_domain']  -%}
{% set api_ssl_port = salt['pillar.get']('api:ssl_port', '6443') -%}
{% set api_server_url = 'https://' + api_server + ':' + api_ssl_port -%}
{% set cloud_provider = salt.caasp_pillar.get('cloud:provider') %}

###
# kubernetes kubelet (minion) config

# The address for the info server to serve on (set to 0.0.0.0 or "" for all interfaces)
KUBELET_ADDRESS="--address=0.0.0.0"

# The port for the info server to serve on
KUBELET_PORT="--port={{ pillar['kubelet']['port'] }}"

# Ensure we match the machine hostname
KUBELET_HOSTNAME="--hostname-override={{ grains['nodename'] }}"

# Add your own!
KUBELET_ARGS="\
    --cgroups-per-qos \
    --cgroup-driver=cgroupfs \
    --cgroup-root=/ \
    --kube-reserved-cgroup=podruntime.slice \
{% if salt.caasp_pillar.get_kubelet_reserved_resources('kube') -%}
    --kube-reserved={{ salt.caasp_pillar.get_kubelet_reserved_resources('kube') }} \
{% endif -%}
    --system-reserved-cgroup=system \
{% if salt.caasp_pillar.get_kubelet_reserved_resources('system') -%}
    --kube-reserved={{ salt.caasp_pillar.get_kubelet_reserved_resources('system') }} \
{% endif -%}
    --enforce-node-allocatable=pods \
{% if pillar['kubelet']['eviction-hard'] -%}
    --eviction-hard={{ pillar['kubelet']['eviction-hard'] }} \
{% endif -%}
    --cluster-dns={{ pillar['dns']['cluster_ip'] }} \
    --cluster-domain={{ pillar['dns']['domain'] }} \
    --node-ip={{ salt.caasp_net.get_primary_ip() }} \
{% if grains['lsb_distrib_id'] == "CAASP" -%}
    --pod-manifest-path=/etc/kubernetes/manifests \
    --pod-infra-container-image={{ pillar['pod_infra_container_image'] }} \
{% endif -%}
{% if cloud_provider -%}
               --cloud-provider={{ pillar['cloud']['provider'] }} \
  {% if cloud_provider == 'openstack' -%}
               --cloud-config=/etc/kubernetes/openstack-config \
  {% endif -%}
{% endif -%}
    {{ pillar['components']['kubelet']['args'] }} \
{% if salt.caasp_cri.cri_name() == 'crio' -%}
    --container-runtime=remote \
    --container-runtime-endpoint={{ pillar['cri']['crio']['socket'] }} \
    --runtime-request-timeout=10m \
{% endif -%}
    --client-ca-file={{ pillar['ssl']['ca_file'] }} \
    --network-plugin=cni \
    --cni-bin-dir={{ pillar['cni']['dirs']['bin'] }} \
    --cni-conf-dir={{ pillar['cni']['dirs']['conf'] }} \
    --kubeconfig={{ pillar['paths']['kubelet_config'] }} \
    --volume-plugin-dir=/usr/lib/kubernetes/kubelet-plugins"
