###
# kubernetes system config
#
# The following values are used to configure the kube-apiserver
#

+{% set kubernetes_version = salt['pillar.get']('versions:kubernetes', '') %}

# The address on the local server to listen to.
KUBE_API_ADDRESS="--insecure-bind-address=127.0.0.1 --bind-address=0.0.0.0"

# The port on the local server to listen on.
KUBE_API_PORT="--insecure-port=8080 --secure-port={{ pillar['api']['ssl_port'] }}"

# Comma separated list of nodes in the etcd cluster
{% if pillar['ssl']['enabled'] -%}
KUBE_ETCD_SERVERS="--etcd-cafile={{ pillar['ssl']['ca_file'] }} \
                   --etcd-certfile={{ pillar['ssl']['crt_file'] }} \
                   --etcd-keyfile={{ pillar['ssl']['key_file'] }} \
                   --etcd-servers=https://{{ grains['caasp_fqdn'] }}:2379"
{% else -%}
KUBE_ETCD_SERVERS="--etcd-servers=http://{{ grains['caasp_fqdn'] }}:2379"
{% endif -%}

# Address range to use for services
# [alvaro] should not be in the same range as the flannel network (https://github.com/coreos/flannel/issues/232)
KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range={{ pillar['services_cidr'] }}"

# default admission control policies
{% if kubernetes_version.startswith("1.6") or kubernetes_version.startswith("1.7") %}
KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds"
{% elif kubernetes_version.startswith("1.4") or kubernetes_version.startswith("1.5") %}
KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota"
{% else %}
KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota"
{% endif %}

# Add your own!
KUBE_API_ARGS="--advertise-address={{ grains['ip4_interfaces']['eth0'][0] }} \
               --apiserver-count={{ salt['mine.get']('roles:kube-master', 'caasp_fqdn', expr_form='grain').values()|length }} \
{% if salt['pillar.get']('infrastructure', 'libvirt') == 'aws' -%}
               --cloud-provider=aws \
{% endif -%}
               --tls-cert-file={{ pillar['ssl']['crt_file'] }} \
               --tls-private-key-file={{ pillar['ssl']['key_file'] }} \
               {{ salt['pillar.get']('components:apiserver:args', '') }} \
               --client-ca-file={{ pillar['ssl']['ca_file'] }}"
